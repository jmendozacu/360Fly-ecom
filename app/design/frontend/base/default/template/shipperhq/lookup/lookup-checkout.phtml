<?php
/**
 * Fontis Australia Extension
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 *
 * @category   Fontis
 * @package    Fontis_Australia
 * @author     Chris Norton
 * @copyright  Copyright (c) 2014 Fontis Pty. Ltd. (http://www.fontis.com.au)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
/**
 *
 * Webshopapps Shipping Module
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * Shipper HQ Shipping
 *
 * @category ShipperHQ
 * @package ShipperHQ_Shipping_Carrier
 * @copyright Copyright (c) 2014 Zowta LLC (http://www.ShipperHQ.com)
 * @license http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 * @author ShipperHQ Team sales@shipperhq.com
 */
?>
<?php if (Mage::helper('shipperhq_lookup')->isPostcodeAutocompleteEnabled()): ?>
    <script type="text/javascript">
        var citySuggestUrl = '<?php echo $this->helper('shipperhq_lookup')->getCitySuggestUrl(); ?>';

        //============ Billing ============//
        var autocomplete_city_billing = new Element('div', { id: 'autocomplete_city_billing', 'class': 'shipperhq-lookup-suburb' });
        var billing_completer;
        var shipping_completer;

        if ($('billing:city')) {
            $('billing:city').parentNode.appendChild(autocomplete_city_billing);

            function updateAddressBilling(text, item) {
                // Update state and postcode fields
                var id = item.id;
                var tokens = id.split('-');

                // Assume item at index 1 is region_id, item at index 3 is postcode
                $('billing:region_id').value = tokens[1];
                var postcode = tokens[3];
                if(postcode != '') {
                    $('billing:postcode').value  = postcode;
                }
            }

            // Create the autocompleter and assign it to a variable for future use.
            billing_completer = new Ajax.Autocompleter("billing:city", "autocomplete_city_billing", citySuggestUrl, {
                afterUpdateElement: updateAddressBilling,
                minChars: 3,
                parameters: 'country=' + $F('billing:country_id')
            });
        }

        $('billing:country_id').observe('change', function(event) {
            billing_completer.options.defaultParams = 'country=' + $F('billing:country_id');
        });

        //============ Shipping ============//
        var autocomplete_city_shipping = new Element('div', { id: 'autocomplete_city_shipping', 'class': 'fontis-postcode-autocomplete' });

        if ($('shipping:city')) {
            $('shipping:city').parentNode.appendChild(autocomplete_city_shipping);

            function updateAddressShipping(text, item) {
                // Update state and postcode fields
                var id = item.id;
                var tokens = id.split('-');

                // Assume item at index 1 is region_id, item at index 3 is postcode
                var postcode = tokens[3];
                if(postcode != '') {
                    $('shipping:postcode').value  = postcode;
                }
            }

            // Create the autocompleter and assign it to a variable for future use.
            shipping_completer = new Ajax.Autocompleter("shipping:city", "autocomplete_city_shipping", citySuggestUrl, {
                afterUpdateElement: updateAddressShipping,
                minChars: 3,
                parameters: 'country=' + $F('shipping:country_id')
            });
        }
        $('shipping:country_id').observe('change', function(event) {
            shipping_completer.options.defaultParams = 'country=' + $F('shipping:country_id');
        });
    </script>
<?php endif ?>