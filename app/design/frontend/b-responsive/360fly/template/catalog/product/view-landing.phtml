<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
 $skinUrl = $this->getSkinUrl();
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>

<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view" class="container"><?php echo $this->getMessagesBlock()->setEscapeMessageFlag(true)->toHtml() ?></div>
<div>
	<div class="container-fluid no-gutter x-hidden">
		<form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
			<?php echo $this->getBlockHtml('formkey') ?>
			<div class="no-display">
				<input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
				<input type="hidden" name="related_product" id="related-products-field" value="" />
			</div>
			<div class="">
				<div class="container-fluid landing-header">		
					<div class="landing-camera-layer">
						<div class="container wrapper-width">
							<div class="row">
								<div class="col-lg-7 col-md-7 col-sm-7 col-xs-12">
									<?php if ($_product->getImage() != 'no_selection' && $_product->getImage()): ?>
										<div class="">
											<img src="<?php echo Mage::helper('catalog/image')->init($_product, 'image') ?>" class="landing-img"/>
										</div>
									<?php endif; ?>
								</div>
								<div class="col-lg-5 col-lg-offset-0 col-md-5 col-md-offset-0 col-sm-5 col-sm-offset-0 col-xs-12 camera-info">
									<?php if ($_product->getShortDescription()):?>
										<div class="short-description std">
											<h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
											<p class="product-ids"><?php echo $this->__('SKU# %s', $this->escapeHtml($_product->getSku())); ?></p>
											<?php echo $_helper->productAttribute($_product, $_product->getShortDescription(), 'short_description') ?>
										</div>
									<?php endif;?>
									<button  type="button" class="btn btn-lg btn-primary landing-header-btn" id="landing-cart" >Add to Cart</button>											
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<!-- <div class="clearfix">&nbsp;</div> -->
			<div class="landing-hand">
				<div class="container wrapper-width">
					<div class="row">
						<div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 landing-content">
						<h2>ONE LENS. NO SEAMS. <br>LIMITLESS POSSIBILITIES.</h2>
						<p>Unlike other 360Â° and VR cameras, the 360fly does it all with one lens, requires no complicated software and has no image seaming or stitching that can interfere with the action.</p>
						</div>
					</div>
				</div>
				<div class="hand-holding-camera pull-right hidden-xs hidden-sm ">
					<img src="<?php echo $skinUrl;?>images/camera-details/hand-4k.png" alt="hand camera" title="Hand Camera">
				</div>
			</div>
			<div class="container-fluid no-gutter graybg">
				<div class="container">
					<?php if ($detailedInfoGroup = $this->getChildGroup('detailed_info', 'getChildHtml')):?>
						<dl id="collateral-tabs" class="collateral-tabs">
						<?php foreach ($detailedInfoGroup as $alias => $html):?>
							<dt class="tab"><span><?php echo $this->escapeHtml($this->getChildData($alias, 'title')) ?></span></dt>
							<dd class="tab-container">
							   <div class="tab-content landing-page-content"><?php echo $html ?></div>
							</dd>
						<?php endforeach;?>
						</dl>
						<script type="text/javascript">
						//<![CDATA[
							var collateralTabs = new Enterprise.Tabs('collateral-tabs');
							Event.observe(window, 'load', function() {
								collateralTabs.select();
							});
						//]]>
						</script>
					<?php endif; ?>
				</div>
			</div>
			<!-- <div class="clearfix">&nbsp;</div> -->
			
		</form>
			<?php echo $this->getChildHtml('relatedProducts') ?>
			<?php echo $this->getChildHtml('upsell_products') ?>
			<?php echo $this->getChildHtml('productTagList') ?>
			<?php echo $this->getChildHtml('product_additional_data') ?>
	</div>
</div>
<script type="text/javascript">
//<![CDATA[
    var productAddToCartForm = new VarienForm('product_addtocart_form');
    productAddToCartForm.submit = function(button, url) {
        if (this.validator.validate()) {
            var form = this.form;
            var oldUrl = form.action;

            if (url) {
               form.action = url;
            }
            var e = null;
            try {
                this.form.submit();
            } catch (e) {
            }
            this.form.action = oldUrl;
            if (e) {
                throw e;
            }

            if (button && button != 'undefined') {
                button.disabled = true;
            }
        }
    }.bind(productAddToCartForm);

    productAddToCartForm.submitLight = function(button, url){
        if(this.validator) {
            var nv = Validation.methods;
            delete Validation.methods['required-entry'];
            delete Validation.methods['validate-one-required'];
            delete Validation.methods['validate-one-required-by-name'];
            // Remove custom datetime validators
            for (var methodName in Validation.methods) {
                if (methodName.match(/^validate-datetime-.*/i)) {
                    delete Validation.methods[methodName];
                }
            }

            if (this.validator.validate()) {
                if (url) {
                    this.form.action = url;
                }
                this.form.submit();
            }
            Object.extend(Validation.methods, nv);
        }
    }.bind(productAddToCartForm);
//]]>
</script>
