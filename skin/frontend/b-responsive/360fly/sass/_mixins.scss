@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}
@mixin headings($from: 1, $to: 6){
    @for $i from $from through $to{
      h#{$i}{
        @content
      }
    }
}

@function headings($from:1, $to:6) {
    @if $from == $to {
        @return 'h#{$from}';
    } @else {
        @return 'h#{$from},' + headings($from+1, $to);
    }
}

@mixin opacity($value) {
  -moz-opacity: $value;
  -khtml-opacity: $value;
  opacity: $value;
  -ms-filter:progid:DXImageTransform.Microsoft.Alpha(Opacity=$value);
  filter: progid:DXImageTransform.Microsoft.Alpha(opacity=$value);
  filter:alpha(opacity=$value);
}

@mixin transition($type,$time){
  -webkit-transition: $type $time ease-in-out;
  -moz-transition: $type $time ease-in-out;
  transition: $type $time ease-in-out;
}

@mixin scale($value){
  -ms-transform: scale($value); /* IE 9 */
  -webkit-transform: scale($value); /* Safari */
  transform: scale($value);
}

@mixin box-shadow($left, $top, $blur, $color, $inset:"") {
    -webkit-box-shadow: $left $top $blur $color #{$inset};
    -moz-box-shadow:    $left $top $blur $color #{$inset};
    -ms-box-shadow:     $left $top $blur $color #{$inset};
    box-shadow:         $left $top $blur $color #{$inset};
}

@mixin text-shadow($left, $top, $blur, $color) {
  -webkit-text-shadow: $left $top $blur $color;
  -moz-text-shadow:    $left $top $blur $color;
  -ms-text-shadow:     $left $top $blur $color;
  text-shadow:         $left $top $blur $color;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}  
}

@mixin make-row($gutter: $grid-gutter-width) {
  margin-left: ($gutter / -2);
  margin-right: ($gutter / -2);
  display: block;
  @include clearfix();
}
@mixin make-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  float: left;
  width: percentage(($columns / 12));
  min-height: 1px;
  padding-left: ($gutter / 2);
  padding-right: ($gutter / 2);
}

@mixin make-container {
  width: 100%;
  padding-left: 10px;
  padding-right: 10px;
  @media screen and (min-width: 768px){
    width: 740px;
    margin-left: auto;
    margin-right: auto;
  }
  @media screen and (min-width: 992px){
    width: 960px;
  }
  @media screen and (min-width: 1200px){
    width: 1160px;
  }
}